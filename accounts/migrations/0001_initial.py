# Generated by Django 3.0.6 on 2020-07-14 15:57

import accounts.database
import accounts.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_client', models.BooleanField(default=False)),
                ('is_partner', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Manage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('phone', models.CharField(max_length=10)),
                ('company', models.CharField(max_length=200)),
                ('designation', models.CharField(max_length=100)),
                ('company_type', models.CharField(max_length=100)),
                ('mobile', models.CharField(max_length=10)),
                ('address', models.CharField(max_length=500)),
                ('state', models.CharField(max_length=150)),
                ('city', models.CharField(max_length=100)),
                ('pin', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('company', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=12)),
                ('ca_final', models.BooleanField()),
                ('cfa_level3', models.BooleanField()),
                ('ifc', models.BooleanField()),
                ('frm_acc', models.BooleanField()),
                ('work_exp', models.IntegerField()),
                ('previous_work', models.CharField(max_length=1000, null=True)),
                ('address', models.CharField(max_length=500)),
                ('state', models.CharField(max_length=150)),
                ('city', models.CharField(max_length=100)),
                ('pin', models.CharField(max_length=10)),
                ('is_approved', models.BooleanField(default=False)),
                ('resume', models.FileField(null=True, upload_to=accounts.database.partner_resume)),
                ('services_provided', models.ManyToManyField(to='accounts.Service')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documents', models.FileField(max_length=200, upload_to=accounts.database.product, validators=[accounts.models.validate_file_extension])),
                ('comments', models.CharField(blank=True, max_length=200, null=True)),
                ('managed', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.Manage')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=200)),
                ('documents', models.FileField(max_length=200, upload_to=accounts.database.order, validators=[accounts.models.validate_file_extension])),
                ('comments', models.CharField(blank=True, max_length=200, null=True)),
                ('ordered_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('service_req', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.Service')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.Client')),
            ],
        ),
        migrations.AddField(
            model_name='manage',
            name='order',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.Order'),
        ),
        migrations.CreateModel(
            name='Partnerprofile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Official_photo', models.ImageField(upload_to=accounts.database.partner_photo)),
                ('Aadhar_card', models.FileField(max_length=200, upload_to=accounts.database.partner_aadhar, validators=[accounts.models.validate_file_extension])),
                ('Pan_card', models.FileField(max_length=200, upload_to=accounts.database.partner_pan, validators=[accounts.models.validate_file_extension])),
                ('Work_experience', models.FileField(max_length=200, upload_to=accounts.database.partner_worexp, validators=[accounts.models.validate_file_extension])),
                ('Payment_slip', models.FileField(max_length=200, upload_to=accounts.database.partner_ps, validators=[accounts.models.validate_file_extension])),
                ('Educational_certificate', models.FileField(max_length=200, upload_to=accounts.database.partner_ec, validators=[accounts.models.validate_file_extension])),
                ('partner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.Partner')),
            ],
        ),
        migrations.AddField(
            model_name='manage',
            name='partner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.Partner'),
        ),
        migrations.CreateModel(
            name='Clientprofile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(max_length=200, upload_to=accounts.database.client_logo)),
                ('Official_photo', models.ImageField(max_length=200, upload_to=accounts.database.client_photo)),
                ('Aadhar_card', models.FileField(max_length=200, upload_to=accounts.database.client_aadhar, validators=[accounts.models.validate_file_extension])),
                ('Pan_card', models.FileField(max_length=200, upload_to=accounts.database.client_pan, validators=[accounts.models.validate_file_extension])),
                ('Certificate_of_Inc', models.FileField(max_length=200, upload_to=accounts.database.client_coinc, validators=[accounts.models.validate_file_extension])),
                ('Company_Pan_card', models.FileField(max_length=200, upload_to=accounts.database.client_cpan, validators=[accounts.models.validate_file_extension])),
                ('Payment_slip', models.FileField(max_length=200, upload_to=accounts.database.client_ps, validators=[accounts.models.validate_file_extension])),
                ('TAN_Document', models.FileField(max_length=200, upload_to=accounts.database.client_tan, validators=[accounts.models.validate_file_extension])),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.Client')),
            ],
        ),
    ]
